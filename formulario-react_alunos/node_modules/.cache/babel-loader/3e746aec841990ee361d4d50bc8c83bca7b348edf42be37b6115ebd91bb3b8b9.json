{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DEV_2ano_2024\\\\Documents\\\\react-exemplos\\\\formulario-react_alunos\\\\src\\\\components\\\\forms\\\\form.js\",\n  _s = $RefreshSig$();\n// Importa o React e os hooks necessários do React\nimport React, { useState } from 'react';\n// Importa o hook usefrom o react-hook-form para lidar com formulários de maneira eficiente\n// Obs: Para instalar (npm install react-hook-form)\nimport { useForm } from 'react-hook-form';\n// Importa o arquivo de estilos CSS\nimport '../css/style.css';\n// Importa a imagem de fundo do login\nimport minhaImagem from '../images/login.jpg';\n// Importa a imagem de verificação\nimport verified from '../images/verified.png';\n\n// Função principal que representa o componente do formulário\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyForm() {\n  _s();\n  // Destruturação do objeto retornado pelo hook useForm\n  // fromState é um objeto que contém o estado do formulário, e errors é uma propriedade desse objeto\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  // Estado local para controlar o estado do formulário\n  const [status, setStatus] = useState({\n    submittedSuccessfully: false,\n    loading: false,\n    showPassword: false\n  });\n\n  // Função que é chamada quando o formulário é enviado\n  const onSubmit = data => {\n    // {...status }: O operador de propagação (...) é utilizado para criar uma cópia do estado atual (status). Isso é feito para garantir que não estamos modificando diretamenteo estado anterior, respeitando o princípio de imutabilidade no React.\n    setStatus({\n      ...status,\n      loading: true\n    }); // Atualiza o estado para indicar que está carregando\n\n    // Simula um tempo de espera antes de atualizar o estado para sucesso\n    setTimeout(() => {\n      setStatus({\n        submittedSuccessfully: true,\n        loading: false\n      });\n    }, 1000);\n  };\n\n  // Função para gerar mensagens de erro com base no nome do campo\n  const generateErrorMessage = fieldName => {\n    return {\n      required: `${fieldName} é obrigatório`,\n      // Mensagem para campos obrigatórios\n      pattern: fieldName === 'email' ? 'Formato de e-mail inválido' : null //Mensagem para formato de e-mail inválido\n    };\n  };\n\n  // Função para lidar com o retorno à página inicial\n  const handleReturnButtonClick = () => {\n    // Redireciona para a página inicial\n    window.location.href = '/';\n  };\n\n  // Renderização condicional (usandon ternário ?) com base no sucesso do envio do formulário\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: status.submittedSuccessfully ?\n    /*#__PURE__*/\n    // Se o formulário foi enviado com sucesso, exibe uma mensagem de sucesso \n    _jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: verified,\n        alt: \"Verificado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Formul\\xE1rio Enviado com Sucesso!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Obrigado por enviar o formul\\xE1rio.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleReturnButtonClick,\n        children: \"Retornar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // Se o formulário ainda não foi enviado com sucesso, exibe o formulário para preenchimento \n    _jsxDEV(\"div\", {\n      className: \"form-sign-up\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: minhaImagem,\n          alt: \"imagem de uma pessoa se cadastrando pelo celular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Inscreva-se\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          on: true,\n          Submit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"firstName\", generateErrorMessage(\"Nome\")),\n              placeholder: \"Nome\",\n              id: \"name\",\n              autoComplete: \"off\",\n              className: errors.firstName ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 5\n            }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.firstName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sobrenome\",\n              children: \"Sobrenome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"lastName\", generateErrorMessage(\"Sobrenome\")),\n              placeholder: \"Sobrenome\",\n              id: \"sobrenome\",\n              autoComplete: \"off\",\n              className: errors.lastName ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 9\n            }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: [errors.lastName.message, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"email\", generateErrorMessage(\"Email\")),\n              placeholder: \"E-mail\",\n              id: \"email\",\n              autoComplete: \"off\",\n              className: errors.email ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 9\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: [errors.email.message, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...register(\"password\", generateErrorMessage(\"Senha\")),\n                placeholder: \"Senha\",\n                id: \"password\",\n                autoComplete: \"off\",\n                type: status.showPassword ? 'text' : 'password',\n                className: errors.password ? 'error' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\" //Define o tipo do botão como \"button\" para evitar comportamento padrão de envio de formulário\n                ,\n                className: \"password-toggle\" // Adiciona a classe CSS 'password-toggle' para estilização específica\n                ,\n                onClick: () => setStatus({\n                  ...status,\n                  showPassword: !status.showPassword\n                })\n                //Define a função de clique que atualiza o estado 'status', alternando o valor de 'showPassword'\n                ,\n                children: status.showPassword ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-eye\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 28\n                }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-eye-slash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 61\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 9\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            type: \"submit\",\n            disabled: status.loading,\n            children: status.loading ? 'Enviando...' : 'Enviar'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }, this), status.loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Carregando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n// Exporta componente \"MyForm\"\n_s(MyForm, \"SffbAJzoBHNunCY4kt3kDsOE58I=\", false, function () {\n  return [useForm];\n});\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","useState","useForm","minhaImagem","verified","jsxDEV","_jsxDEV","MyForm","_s","register","handleSubmit","formState","errors","status","setStatus","submittedSuccessfully","loading","showPassword","onSubmit","data","setTimeout","generateErrorMessage","fieldName","required","pattern","handleReturnButtonClick","window","location","href","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","on","Submit","htmlFor","placeholder","id","autoComplete","firstName","message","lastName","email","type","password","disabled","_c","$RefreshReg$"],"sources":["C:/Users/DEV_2ano_2024/Documents/react-exemplos/formulario-react_alunos/src/components/forms/form.js"],"sourcesContent":["// Importa o React e os hooks necessários do React\nimport React, { useState } from 'react';\n// Importa o hook usefrom o react-hook-form para lidar com formulários de maneira eficiente\n// Obs: Para instalar (npm install react-hook-form)\nimport { useForm } from 'react-hook-form';\n// Importa o arquivo de estilos CSS\nimport '../css/style.css';\n// Importa a imagem de fundo do login\nimport minhaImagem from '../images/login.jpg';\n// Importa a imagem de verificação\nimport verified from '../images/verified.png';\n\n\n// Função principal que representa o componente do formulário\nfunction MyForm() {\n    // Destruturação do objeto retornado pelo hook useForm\n    // fromState é um objeto que contém o estado do formulário, e errors é uma propriedade desse objeto\n    const {register, handleSubmit, formState: {errors} } = useForm();\n    // Estado local para controlar o estado do formulário\n    const [status, setStatus] = useState({ submittedSuccessfully: false, loading: false, showPassword: false });\n\n    // Função que é chamada quando o formulário é enviado\n    const onSubmit = data => {\n        // {...status }: O operador de propagação (...) é utilizado para criar uma cópia do estado atual (status). Isso é feito para garantir que não estamos modificando diretamenteo estado anterior, respeitando o princípio de imutabilidade no React.\n        setStatus({ ...status, loading: true }); // Atualiza o estado para indicar que está carregando\n\n        // Simula um tempo de espera antes de atualizar o estado para sucesso\n        setTimeout(() => {\n            setStatus({ submittedSuccessfully: true, loading: false });\n        }, 1000);\n    };\n\n    // Função para gerar mensagens de erro com base no nome do campo\n    const generateErrorMessage = fieldName => {\n        return {\n            required: `${fieldName} é obrigatório`, // Mensagem para campos obrigatórios\n            pattern: fieldName === 'email' ? 'Formato de e-mail inválido' : null //Mensagem para formato de e-mail inválido\n        };\n    };\n\n    // Função para lidar com o retorno à página inicial\n    const handleReturnButtonClick = () => {\n        // Redireciona para a página inicial\n        window.location.href = '/';\n    };\n\n    // Renderização condicional (usandon ternário ?) com base no sucesso do envio do formulário\n    return (\n        <div className='container'>\n            {status.submittedSuccessfully ? (\n                // Se o formulário foi enviado com sucesso, exibe uma mensagem de sucesso \n                <div className='success-message'>\n                    <img src={verified} alt='Verificado' />\n                    <h2>Formulário Enviado com Sucesso!</h2>\n                    <p>Obrigado por enviar o formulário.</p>\n                    <button className='btn' onClick={handleReturnButtonClick}>Retornar</button>\n                </div>\n            ) : ( \n            // Se o formulário ainda não foi enviado com sucesso, exibe o formulário para preenchimento \n            <div className='form-sign-up'>\n                <div>\n                    <img src={minhaImagem} alt='imagem de uma pessoa se cadastrando pelo celular' />\n                </div>\n\n                <section>\n                    <h1>Inscreva-se</h1>\n\n    {/*Formulário com campos controladospelo hook useForm */}\n    <form on Submit={handleSubmit(onSubmit)}>\n\n    {/*Campo Nome */}\n    <div className='form flex'>\n    <label htmlFor='name'>Nome</label>\n    <input \n    {...register(\"firstName\", generateErrorMessage(\"Nome\"))}\n    placeholder=\"Nome\"\n    id='name'\n    autoComplete='off'\n    className={errors.firstName ? 'error' : ''}\n    />\n    {errors.firstName && <span className='error-message'>{errors.firstName.message}</span>}\n    </div>\n\n    {/*Campo Sobrenome */}\n    <div className='form flex'>\n        <label htmlFor='sobrenome'>Sobrenome</label>\n        <input \n        {...register(\"lastName\", generateErrorMessage(\"Sobrenome\"))}\n        placeholder=\"Sobrenome\"\n        id='sobrenome'\n        autoComplete='off'\n        className={errors.lastName ? 'error' : ''}\n        />\n        {errors.lastName && <span className='error-message'>{errors.lastName.message} </span>}\n    </div>\n\n    {/*Campo E-mail */}\n    <div className='form flex'>\n        <label htmlFor='email'>E-mail</label>\n        <input \n        {...register(\"email\", generateErrorMessage(\"Email\"))}\n        placeholder=\"E-mail\"\n        id='email'\n        autoComplete='off'\n        className={errors.email ? 'error' : ''}\n        />\n        {errors.email && <span className='error-message'>{errors.email.message} </span>}\n    </div>\n\n    {/*Campo Senha */}\n    <div className='form flex'>\n        <label htmlFor='password'>Senha</label>\n        <div className=\"password-input-container\">\n        <input \n        {...register(\"password\", generateErrorMessage(\"Senha\"))}\n        placeholder=\"Senha\"\n        id='password'\n        autoComplete='off'\n        type={status.showPassword ? 'text' : 'password'}\n        className={errors.password ? 'error' : ''}\n        />\n\n    <button\n    type=\"button\" //Define o tipo do botão como \"button\" para evitar comportamento padrão de envio de formulário\n    className='password-toggle' // Adiciona a classe CSS 'password-toggle' para estilização específica\n    onClick={() => setStatus({ ...status, showPassword: !status.showPassword })}\n    //Define a função de clique que atualiza o estado 'status', alternando o valor de 'showPassword'\n    >\n    {status.showPassword ? <i className=\"fas fa-eye\"></i> : <i className=\"fas fa-eye-slash\" ></i>}\n    {/* Renderiza condicionalmente um ícone de olho aberto ou fechado com base no valor de 'showPassword' */}\n    </button> \n\n        </div>\n        {errors.password && <span className='error-message'>{errors.password.message}</span>}\n    </div>\n\n    {/* Botão Enviar */}\n    <button className='btn' type=\"submit\" disabled={status.loading}>\n        {status.loading ? 'Enviando...' : 'Enviar'}\n    </button>\n    </form> \n    {status.loading && <p>Carregando...</p>}\n                </section>\n            </div>\n        )}\n</div>\n\n    );\n}\n// Exporta componente \"MyForm\"\nexport default MyForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}