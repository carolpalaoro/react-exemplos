{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRemove, faVideo } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '../../components';\nimport { toast } from 'react-toastify';\nimport styles from './styles.module.css';\n\nfunction Favorites() {\n  _s();\n\n  // Define o componente funcional Favorites.\n  const [movies, setMovies] = useState([]); // Define o estado 'movies' e a função 'setMovies' para gerenciar a lista de filmes favoritos.\n\n  useEffect(() => {\n    // Define um efeito que é executado apenas após a montagem do componente. \n    const myList = localStorage.getItem('@primeflix'); // Obtém a lista de filmes favoritos do armazenamento local.\n\n    setMovies(JSON.parse(myList) || []); // Atualiza o estado 'movies com a lista de filmes favoritos obtida do armzenamento local, ou define como um array vazio se não houver lista.\n  }, []); // o segundo argumento (um array vazio) indica que este efeito deve ser executado apenas uma vez, após a montagem inicial do componente.\n\n  function removeMovie(id) {\n    // Define a função 'removeMovie' para remover um filme da lista de favoritos.\n    let filterMovies = movies.filter(movie => {\n      // Filtra a lista de fimes para remover o filme com o ID fornecido.\n      return movie.id !== id; // Retorna verdadeiro para manter os filmesque não têm o ID fornecido.\n    });\n    setMovies(filterMovies); // Atualiza o estado 'movies' com a lista de filmes filtrada.\n\n    localStorage.setItem('@primeflix', JSON.stringify(filterMovies)); // Atualiza o armazenamento local com a lista de filmes filtrada.\n  }\n}\n\n_s(Favorites, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Favorites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"names":["useEffect","useState","Link","FontAwesomeIcon","faRemove","faVideo","Button","toast","styles","Favorites","movies","setMovies","myList","localStorage","getItem","JSON","parse","removeMovie","id","filterMovies","filter","movie","setItem","stringify"],"sources":["C:/Users/DEV_2ano_2024/Documents/react-exemplos/primeflix/src/pages/Favorites/index.js"],"sourcesContent":["import { useEffect, useState } from 'react'; \nimport { Link } from 'react-router-dom'; \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; \nimport { faRemove, faVideo } from '@fortawesome/free-solid-svg-icons'; \nimport { Button } from '../../components'; \nimport { toast } from 'react-toastify'; \n\nimport styles from './styles.module.css'; \n\nfunction Favorites() { // Define o componente funcional Favorites.\n    const [movies, setMovies] = useState([]); // Define o estado 'movies' e a função 'setMovies' para gerenciar a lista de filmes favoritos.\n    \n    useEffect(() => {// Define um efeito que é executado apenas após a montagem do componente. \n        const myList = localStorage.getItem('@primeflix'); // Obtém a lista de filmes favoritos do armazenamento local.\n        setMovies(JSON.parse(myList) || []); // Atualiza o estado 'movies com a lista de filmes favoritos obtida do armzenamento local, ou define como um array vazio se não houver lista.\n    }, []); // o segundo argumento (um array vazio) indica que este efeito deve ser executado apenas uma vez, após a montagem inicial do componente.\n\n    function removeMovie(id) { // Define a função 'removeMovie' para remover um filme da lista de favoritos.\n        let filterMovies = movies.filter((movie) => { // Filtra a lista de fimes para remover o filme com o ID fornecido.\n            return (movie.id !== id); // Retorna verdadeiro para manter os filmesque não têm o ID fornecido.\n        });\n\n        setMovies(filterMovies); // Atualiza o estado 'movies' com a lista de filmes filtrada.\n\n        localStorage.setItem('@primeflix', JSON.stringify(filterMovies)); // Atualiza o armazenamento local com a lista de filmes filtrada.\n\n        \n    }\n\n}"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,mCAAlC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,SAASC,SAAT,GAAqB;EAAA;;EAAE;EACnB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC,CADiB,CACyB;;EAE1CD,SAAS,CAAC,MAAM;IAAC;IACb,MAAMY,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAf,CADY,CACuC;;IACnDH,SAAS,CAACI,IAAI,CAACC,KAAL,CAAWJ,MAAX,KAAsB,EAAvB,CAAT,CAFY,CAEyB;EACxC,CAHQ,EAGN,EAHM,CAAT,CAHiB,CAMT;;EAER,SAASK,WAAT,CAAqBC,EAArB,EAAyB;IAAE;IACvB,IAAIC,YAAY,GAAGT,MAAM,CAACU,MAAP,CAAeC,KAAD,IAAW;MAAE;MAC1C,OAAQA,KAAK,CAACH,EAAN,KAAaA,EAArB,CADwC,CACd;IAC7B,CAFkB,CAAnB;IAIAP,SAAS,CAACQ,YAAD,CAAT,CALqB,CAKI;;IAEzBN,YAAY,CAACS,OAAb,CAAqB,YAArB,EAAmCP,IAAI,CAACQ,SAAL,CAAeJ,YAAf,CAAnC,EAPqB,CAO6C;EAGrE;AAEJ;;GApBQV,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}