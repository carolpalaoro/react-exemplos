{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DEV_2ano_2024\\\\Documents\\\\react-exemplos\\\\primeflix\\\\src\\\\pages\\\\Favorites\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRemove, faVideo } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '../../components';\nimport { toast } from 'react-toastify';\nimport styles from './styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Favorites() {\n  _s();\n\n  // Define o componente funcional Favorites.\n  const [movies, setMovies] = useState([]); // Define o estado 'movies' e a função 'setMovies' para gerenciar a lista de filmes favoritos.\n\n  useEffect(() => {\n    // Define um efeito que é executado apenas após a montagem do componente. \n    const myList = localStorage.getItem('@primeflix'); // Obtém a lista de filmes favoritos do armazenamento local.\n\n    setMovies(JSON.parse(myList) || []); // Atualiza o estado 'movies com a lista de filmes favoritos obtida do armzenamento local, ou define como um array vazio se não houver lista.\n  }, []); // o segundo argumento (um array vazio) indica que este efeito deve ser executado apenas uma vez, após a montagem inicial do componente.\n\n  function removeMovie(id) {\n    // Define a função 'removeMovie' para remover um filme da lista de favoritos.\n    let filterMovies = movies.filter(movie => {\n      // Filtra a lista de fimes para remover o filme com o ID fornecido.\n      return movie.id !== id; // Retorna verdadeiro para manter os filmesque não têm o ID fornecido.\n    });\n    setMovies(filterMovies); // Atualiza o estado 'movies' com a lista de filmes filtrada.\n\n    localStorage.setItem('@primeflix', JSON.stringify(filterMovies)); // Atualiza o armazenamento local com a lista de filmes filtrada.\n\n    toast.success('Filme removido com sucesso.'); // Exibe uma mensagem de sucesso usando a função 'toast' da biblioteca 'react-toastify'\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.my_movies,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Meus filmes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), \" \", movies.length === 0 &&\n      /*#__PURE__*/\n      // Renderiza uma mensagem quando a lista de filmes favoritos está vazia.\n      _jsxDEV(\"span\", {\n        children: \"Voc\\xEA n\\xE3o possui nenhum filme salvo :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this) // Renderiza a mensagem quando a lista de filmes favoritos está vazia.\n      , /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [\" \", movies]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Favorites, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Favorites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"names":["useEffect","useState","Link","FontAwesomeIcon","faRemove","faVideo","Button","toast","styles","Favorites","movies","setMovies","myList","localStorage","getItem","JSON","parse","removeMovie","id","filterMovies","filter","movie","setItem","stringify","success","container","my_movies","length"],"sources":["C:/Users/DEV_2ano_2024/Documents/react-exemplos/primeflix/src/pages/Favorites/index.js"],"sourcesContent":["import { useEffect, useState } from 'react'; \nimport { Link } from 'react-router-dom'; \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; \nimport { faRemove, faVideo } from '@fortawesome/free-solid-svg-icons'; \nimport { Button } from '../../components'; \nimport { toast } from 'react-toastify'; \n\nimport styles from './styles.module.css'; \n\nfunction Favorites() { // Define o componente funcional Favorites.\n    const [movies, setMovies] = useState([]); // Define o estado 'movies' e a função 'setMovies' para gerenciar a lista de filmes favoritos.\n    \n    useEffect(() => {// Define um efeito que é executado apenas após a montagem do componente. \n        const myList = localStorage.getItem('@primeflix'); // Obtém a lista de filmes favoritos do armazenamento local.\n        setMovies(JSON.parse(myList) || []); // Atualiza o estado 'movies com a lista de filmes favoritos obtida do armzenamento local, ou define como um array vazio se não houver lista.\n    }, []); // o segundo argumento (um array vazio) indica que este efeito deve ser executado apenas uma vez, após a montagem inicial do componente.\n\n    function removeMovie(id) { // Define a função 'removeMovie' para remover um filme da lista de favoritos.\n        let filterMovies = movies.filter((movie) => { // Filtra a lista de fimes para remover o filme com o ID fornecido.\n            return (movie.id !== id); // Retorna verdadeiro para manter os filmesque não têm o ID fornecido.\n        });\n\n        setMovies(filterMovies); // Atualiza o estado 'movies' com a lista de filmes filtrada.\n\n        localStorage.setItem('@primeflix', JSON.stringify(filterMovies)); // Atualiza o armazenamento local com a lista de filmes filtrada.\n\n        toast.success('Filme removido com sucesso.'); // Exibe uma mensagem de sucesso usando a função 'toast' da biblioteca 'react-toastify'\n    }\n\n    return (\n        <div className={styles.container}> {/* Define um contêiner com a classe CSS 'container' */}\n        <div className={styles.my_movies}> {/* Define um contêiner com a clase CSS 'my_movies' */}\n        <h1>Meus filmes</h1> {/* Renderiza o título 'Meus filmes' */}\n        {movies.length === 0 && ( // Renderiza uma mensagem quando a lista de filmes favoritos está vazia.\n        <span>Você não possui nenhum filme salvo :(</span> // Renderiza a mensagem quando a lista de filmes favoritos está vazia.\n        )}\n        <ul> {/* Define uma lista naõ ordenada */}\n        {movies}\n        </ul>\n\n        </div>\n\n        </div>\n    )\n\n}"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,mCAAlC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,SAASC,SAAT,GAAqB;EAAA;;EAAE;EACnB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC,CADiB,CACyB;;EAE1CD,SAAS,CAAC,MAAM;IAAC;IACb,MAAMY,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAf,CADY,CACuC;;IACnDH,SAAS,CAACI,IAAI,CAACC,KAAL,CAAWJ,MAAX,KAAsB,EAAvB,CAAT,CAFY,CAEyB;EACxC,CAHQ,EAGN,EAHM,CAAT,CAHiB,CAMT;;EAER,SAASK,WAAT,CAAqBC,EAArB,EAAyB;IAAE;IACvB,IAAIC,YAAY,GAAGT,MAAM,CAACU,MAAP,CAAeC,KAAD,IAAW;MAAE;MAC1C,OAAQA,KAAK,CAACH,EAAN,KAAaA,EAArB,CADwC,CACd;IAC7B,CAFkB,CAAnB;IAIAP,SAAS,CAACQ,YAAD,CAAT,CALqB,CAKI;;IAEzBN,YAAY,CAACS,OAAb,CAAqB,YAArB,EAAmCP,IAAI,CAACQ,SAAL,CAAeJ,YAAf,CAAnC,EAPqB,CAO6C;;IAElEZ,KAAK,CAACiB,OAAN,CAAc,6BAAd,EATqB,CASyB;EACjD;;EAED,oBACI;IAAK,SAAS,EAAEhB,MAAM,CAACiB,SAAvB;IAAA,6BACA;MAAK,SAAS,EAAEjB,MAAM,CAACkB,SAAvB;MAAA,6BACA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,OAEChB,MAAM,CAACiB,MAAP,KAAkB,CAAlB;MAAA;MAAyB;MAC1B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADC,CACkD;MAHnD,eAKA;QAAA,gBACCjB,MADD;MAAA;QAAA;QAAA;QAAA;MAAA,QALA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH;;GApCQD,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}